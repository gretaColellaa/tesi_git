algoritmo che serve a gestire delle richieste (con dei requisiti) da parte di PROFESSORI per le AULE che gli serviranno nel semestre successivo

devo fare delle funzioni che mi permettano di assegnare le aule adatte senza sovrapposizioni


- Priorità: assegnare prima chi ha meno alternative di aule/slot.
- Riassegnazione dinamica: se una nuova richiesta non trova aula libera, proviamo a spostare assegnazioni precedenti se così si riescono a soddisfare più richieste.
- Ottimizzazione capienza: scegliere sempre l'aula più "su misura" possibile, senza sprecare grandi aule se non serve.
- Motivazioni: tracciamo se l'assegnazione avviene o in caso contrario il perché una richiesta non viene soddisfatta.

strategia a livelli:

1. Precalcolo alternative: per ogni richiesta, vediamo quante aule possibili ci sono.
2. Ordinamento intelligente: assegnare prima richieste "critiche" (meno alternative).
3. Assegnazione + Riassegnazione dinamica:  
   - Se la richiesta corrente non trova subito spazio, provo a liberare aule spostando altre richieste meno critiche.
4. Risultato finale: massimo numero di richieste assegnate, motivazioni tracciate.


to do:

-permettere solo ad un admin di assegnare le aule OK
-permettere ai professori di visionare le loro assegnazioni sulla pagina del profilo

-aggiungere delle caratteristiche alle aule (prese, lavagna, proiettore, computer ecc...) OK
-ogni richiesta potrebbe considerare più aule in slot diversi OK

l'utente fa "un'unica" richiesta tramite l'interfaccia, il database memorizza richieste separate per ogni giorno della settimana selezionato
ogni richiesta si riferisce quindi ad un giorno della settimana, e può includere diversi slot all'interno di quel giorno.
l'algoritmo assegnando un'aula per ogni richiesta in questo modo associa un aula per ogni giorno che comprende la richiesta

la richiesta include come attributo il giorno, per cui non serve più nello slot. gli slot diventano 7 e non 35. OK

-scegliere il titolo per la tesi OK

