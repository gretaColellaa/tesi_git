algoritmo che serve a gestire delle richieste (con dei requisiti) da parte di PROFESSORI per le AULE che gli serviranno nel semestre successivo

devo fare delle funzioni che mi permettano di assegnare le aule adatte senza sovrapposizioni

- funzione che trova la richiesta
- funzione che associa le aule possibili alla richiesta
- funzione che asssegna l'aula senza sovrapposizioni




- **Priorit√†:** assegnare prima chi ha meno alternative di aule/slot.
- **Riassegnazione dinamica:** se una nuova richiesta non trova aula libera, proviamo a **spostare** assegnazioni precedenti se cos√¨ si riescono a soddisfare **pi√π richieste**.
- **Ottimizzazione capienza:** scegliere sempre l'aula pi√π "su misura" possibile, senza sprecare grandi aule se non serve.
- **Motivazioni:** tracciamo *perch√©* una richiesta non viene soddisfatta.

---

**Come lo strutturiamo?**
strategia **a livelli**:

1. **Precalcolo alternative**: per ogni richiesta, vediamo quante aule *possibili* ci sono.
2. **Ordinamento intelligente**: assegnare prima richieste "critiche" (meno alternative).
3. **Assegnazione + Riassegnazione dinamica**:  
   - Se la richiesta corrente non trova subito spazio, provo a **liberare** aule spostando altre richieste meno critiche.
4. **Risultato finale**: massimo numero di richieste assegnate, motivazioni tracciate.

---

**Tecnica principale che useremo:**  
üß† **Backtracking intelligente** (non su tutto, solo locale: provo a spostare *1 o 2* assegnazioni, non faccio esplorazione esaustiva).

---
